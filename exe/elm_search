#!/usr/bin/env ruby

require 'elib_mgmt/cli'
require 'tty/prompt'
require 'colorize'

require 'string/similarity'
require 'openssl'

if ARGV.length < 2
  STDERR.puts " <root> <keyword, split by ','>".red
  exit(0)

else
  pmt = TTY::Prompt.new

  pmt.puts "\n eLib Management Utilities version #{ElibMgmt::Cli::VERSION}\n\n"
  pmt.puts " Search files with specific keywords"

  root = ARGV.first
  root = File.expand_path(root)
  pmt.puts " Root to search : #{root}\n\n"

  kw = ARGV[1]
  kw = kw.split(",").map { |v| v.strip }.reject { |v| v.empty? }

  pmt.puts " Keyword to search : #{kw.join(", ")}\n\n"

  files = Dir.glob(File.join(root,"**/**")).reject { |f| File.directory?(f) }

  filter = ElibMgmt::Cli::FileFilter.new(root)

  loop do

    ttl = 0
    found = {  }

    kw.each do |k|
      res = filter.filter(k, "**/**") 

      found[k] = res
      ttl += res.length
    end

    pmt.puts " Found #{ttl} file(s) \n\n".light_blue
    if TR::RTUtils.on_linux?
      begin
        sel = pmt.select(" Open the files? ".yellow, per_page: 10) do |m|
          found.values.flatten.each do |f|
            m.choice " * #{f}", f
          end
          m.choice " + New keyword", :new
          m.choice " + I've done", :abort
        end

        case sel
        when :new
          newKw = pmt.ask(" Please provide a new keywords (separated by ',') : ", required: true)
          kw = newKw.split(",").map { |v| v.strip }.reject { |v| v.empty? }
        when :abort
          pmt.puts "\n\n Have a nice day\n\n".yellow
          break
        else
          `xdg-open #{sel}`
          break
        end
      rescue TTY::Reader::InputInterrupt
        pmt.puts "\n\n Have a nice day\n\n".yellow
        break
      end

    else

      found.each do |k,v|
        v.each do |f|
          pmt.puts " * #{f}"
        end
      end

      break

    end

  end
end
